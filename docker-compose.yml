version: "3.8"
services:
  reverse-proxy:
    # The official v2 Traefik docker image
    image: traefik:v2.8
    restart: always
    # Enables the web UI and tells Traefik to listen to docker
    command: --api.insecure=true --providers.docker
    ports:
      # The HTTP port
      - "${JOURNEY_PORT}:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8084:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
  journey-back:
    image: journey-back
    restart: always
    build:
      context: ./journey-back/
      dockerfile: dockerfile
    user: "node"
    environment:
      - TZ=${SERVER_TIMEZONE}
      - NODE_ENV=production
    depends_on:
      - "journey-mongo-test"
    labels:
      - "traefik.http.routers.journey-back.rule=Host(`${BACKEND_HOST}`)"
  journey-mongo-test:
    container_name: journey-mongo-test
    image: mongo:4.4.6
    restart: always
    # ports:
    # - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOTPASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_DATABASE}
  # mongo-express-test:
  #   container_name: mongo-express-test
  #   image: mongo-express
  #   restart: always
  #   ports:
  #     - "8081:8081"
  #   depends_on:
  #     - journey-mongo-test
  #   environment:
  #     - ME_CONFIG_BASICAUTH_USERNAME=${MONGO_EXPRESS_AUTH_USERNAME}
  #     - ME_CONFIG_BASICAUTH_PASSWORD=${MONGO_EXPRESS_AUTH_PASSWORD}
  #     - ME_CONFIG_MONGODB_SERVER=journey-mongo-test
  #     - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_USERNAME}
  #     - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_ROOTPASSWORD}
networks:
  default:
    name: journey_network
